@use "sass:map";

// --- SUA PALETA (AZUL E NEUTROS) ---
$color-primary: #53B5DB;
$color-secondary: #154A60;
$color-dark: #0077aa;
$color-success: #4CAF50;
$color-error: #D32F2F;
$color-background: #F8F9FA;
$color-white: #FFFFFF;
$color-border: #EAEAEA;
$color-text-light: #6c757d;

// AJUSTE: O mapa de temas agora usa as variáveis da sua paleta.
$themes: (
  light: (
    primary: $color-primary,
    secondary: $color-dark,
    background: $color-white,
    text: $color-secondary,
    border: $color-border,
    error: $color-error,
    hover: $color-background
  ),
  dark: (
    primary: $color-primary,
    secondary: $color-dark,
    background: #1A1D21, // Um cinza escuro para o fundo
    text: #E0E0E0,       // Texto claro
    border: #424242,     // Borda sutil no tema escuro
    error: #ff5252,      // Um vermelho mais brilhante para contraste
    hover: #2d2d2d
  )
);

// Mixins (mantidos como estavam)
@mixin theme($property, $key) {
  @each $theme, $colors in $themes {
    .theme-#{$theme} & {
      #{$property}: map.get($colors, $key);
    }
  }
}

@mixin transition($properties...) {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.login-container {
  max-width: 400px;
  margin: 2rem auto;
  padding: 2rem;
  border-radius: 8px;
  @include theme('background-color', background);
  @include theme('border-color', border);
  border: 1px solid;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);

  h2 {
    text-align: center;
    margin-bottom: 1.5rem;
    @include theme('color', primary);
    font-size: 2rem;
  }

  form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .container-form {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;

    label {
      @include theme('color', text);
      font-weight: 500;
    }

    input {
      padding: 0.75rem;
      border-radius: 4px;
      border: 1px solid;
      @include theme('border-color', border);
      @include theme('background-color', background);
      @include theme('color', text);
      @include transition;

      &:focus {
        outline: none;
        border-width: 2px;
        @include theme('border-color', primary);
      }
      
      // MELHORIA: Usando o mixin para simplificar
      &[aria-invalid="true"] {
        @include theme('border-color', error);
      }
    }

    span {
      // MELHORIA: Mensagem de erro deve ter cor de erro em ambos os temas
      @include theme('color', error);
      font-size: 0.875rem;
      height: 1.25rem;
      display: block;
    }
  }

  .register {
    text-align: center;
    margin: 1rem 0;

    a {
      @include theme('color', primary);
      text-decoration: none;
      @include transition;

      &:hover {
        text-decoration: underline;
        opacity: 0.8;
      }
    }
  }

  button[type="submit"] {
    padding: 0.75rem;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    @include theme('background-color', primary);
    @include theme('color', white); // Texto do botão deve ser branco
    @include transition;

    &:hover:not(:disabled) { // Adicionado :not(:disabled)
      opacity: 0.9;
    }

    // MELHORIA: Usando o mixin para simplificar
    &:disabled {
      @include theme('background-color', border);
      cursor: not-allowed;
    }
  }

  .error {
    text-align: center;
    margin-top: 1rem;
    padding: 0.5rem;
    border-radius: 4px;
    @include theme('color', error);
    @include theme('background-color', hover);
  }
}

// Responsividade
@media (max-width: 480px) {
  .login-container {
    margin: 1rem;
    padding: 1.5rem;
    
    h2 {
      font-size: 1.75rem;
    }
  }
}